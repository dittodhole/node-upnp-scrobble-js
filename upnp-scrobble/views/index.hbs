<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta charset="utf-8" />
  <title></title>
  <link rel="stylesheet" href="//fonts.googleapis.com/css?family=Roboto:300,300italic,700,700italic" />
  <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/normalize/3.0.3/normalize.css" />
  <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/milligram/1.0.3/milligram.min.css" />
  <script src="/socket.io/socket.io.js"></script>
  <script type="text/javascript" src="/knockout/dist/knockout.js"></script>
  <script type="text/javascript">
    'use strict';
    class Service {
      constructor(service) {
        this.serviceKey = service.serviceKey;
        this.deviceIcon = service.deviceIcon;
        this.deviceName = service.deviceName;
        this.deviceModelName = service.deviceModelName;
        this.song = ko.observable();
      }
    }
    class ViewModel {
      constructor() {
        this.services = ko.observableArray();
      }
      _getService(serviceKey) {
        var observableService = ko.utils.arrayFirst(this.services(), (item) => item.serviceKey == serviceKey);

        return observableService;
      }
      addService(service) {
        service = new Service(service);
        this.services.push(service);
      }
      removeService(serviceKey) {
        var service = this._getService(serviceKey);
        if (!service) {
          return;
        }

        this.services.remove(service);
      }
      addSong(serviceKey, song) {
        let service = this._getService(serviceKey);
        if (!service) {
          return;
        }

        song = ko.observable(song);
        service.song = song;
      }
      removeSong(serviceKey) {
        let service = this._getService(serviceKey);
        if (!service) {
          return;
        }

        service.song = null;
      }
    };

    let socket = io.connect();
    let viewModel = new ViewModel();

    window.onload = () => {
      ko.applyBindings(viewModel);
      socket.emit('getServices');
    };

    socket.on('message', (data) => {
      switch (data.type) {
        case 'getServicesResponse':
          ko.utils.arrayForEach(data.services, (service) => viewModel.addService(service));
          break;
        case 'serviceDiscovered':
          viewModel.addService(data.service);
          break;
        case 'serviceDisappeared':
          viewModel.removeService(data.serviceKey);
          break;
        case 'play':
          viewModel.addSong(data.serviceKey, data.song);
          break;
        case 'stop':
          viewModel.removeSong(data.serviceKey);
          break;
      }
    });
  </script>
</head>
<body class="container"
      style="margin-top: 10px;">
  <!-- ko foreach: services -->
  <div class="row">
    <div class="column">
      <div class="float-left">
        <img data-bind="attr: { src: deviceIcon }" />
      </div>
      <span data-bind="text: deviceName"
            style="font-weight: bold;"></span><br />
      <span data-bind="text: deviceModelName"></span><br />
    </div>
  </div>
  <!-- /ko -->
</body>
</html>
